BlackLab Server TODO

Soorten resultaten:
* Hits.
  sort vernietigt oude Hits, produceert nieuwe Hits met andere sortering
  group kan de oude Hits vernietigen (context wijzigt)


- hoe voorkomen we dat tijdens sort/group een andere thread de Hit-context wijzigt?
  Hits object 'locken' en pas vrijgeven als je klaar bent...?
- cache resultaten, gebruik voor bijv. "bladeren"
  requests moeten identificeerbaar zijn. je moet ook hits-resultaten kunnen hergebruiken
  voor per-doc resultaten.
  in hoeverre moeten Hits e.d. objecten threadsafe zijn? Of moeten we lockingmechanismes gebruiken?
  is het een probleem dat sorteren het Hits object wijzigt?
  Mooier zou zijn dat Hits immutable is. Sort is dan een wrapper om Hits heen, etc.
- nonblocking mode

- door server afbreken van requests die te lang lopen of teveel geheugen in beslag nemen (geef foutmelding aan gebruiker, blacklist query)
- door client afbreken van requests waar hij niet meer in geinteresseerd is

- meerdere pattlangs
- hitset operatie afmaken (metadata-filters, docinfo, ...)
- docset operatie
- hitgroups
- docgroups
- document metadata en/of content opvragen
- indexstructuur uitlezen
- configuratiefile (indices, defaultwaardes parameters, ...)


- sessie-ids en logging
- HTTP Accept header ondersteunen
- A&A, via een JAR-plugin die o.a. filterqueries kan toevoegen om alleen een subset documenten toe te staan

